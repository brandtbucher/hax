name: CI
on:
  pull_request:
  push:
  release:
    types: published
jobs:
  black:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.9
      - run: pip install --upgrade --requirement requirements-pre.txt
      - run: pip install --upgrade --requirement requirements.txt
      - run: black --check --diff .
  mypy:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.9
      - run: pip install --upgrade --requirement requirements-pre.txt
      - run: pip install --upgrade --requirement requirements.txt
      - run: mypy
  pylint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.9
      - run: pip install --upgrade --requirement requirements-pre.txt
      - run: pip install --upgrade --requirement requirements.txt
      - run: pylint hax setup
  pytest:
    name: Test / ${{ matrix.os }} / Python ${{ matrix.python }}
    strategy:
      matrix:
        os: [macOS, Ubuntu, Windows]
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python }}
      - run: pip install --upgrade --requirement requirements-pre.txt
      - run: pip install --upgrade --requirement requirements.txt
      - run: pytest
  setup:
    name: Package
    needs: [black, mypy, pylint, pytest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.9
      - run: pip install --upgrade --requirement requirements-pre.txt
      - run: python setup.py sdist bdist_wheel
      - uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
  name: Publish
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
